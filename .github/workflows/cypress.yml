name: Cypress Tests
on:
  push:
    branches: [ "main" ]
    
jobs:
  cypress-run:
    runs-on: ubuntu-latest
    # Runs tests in parallel with matrix strategy https://docs.cypress.io/guides/guides/parallelization
    # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
    # Also see warning here https://github.com/cypress-io/github-action#parallel
    strategy:
      fail-fast: false # https://github.com/cypress-io/github-action/issues/48
      matrix:
        containers: [1, 2] # Uses 2 parallel instances

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy .env.example on host
        run: cp src/.env.example src/.env

      - name: Build and start Docker containers
        run: |
          docker compose -f docker-compose.test.yml up -d --build --force-recreate

      - name: Composer install + APP_KEY + migrate inside app
        run: |
          docker compose -f docker-compose.test.yml exec -T app \
            sh -c "composer install --no-interaction --optimize-autoloader \
                   && php artisan key:generate --ansi --force \
                   && php artisan migrate --force --seed --no-interaction"

      - name: Get logs for micelle-web-1
        run: docker logs micelle-web-1
      - name: Get logs for micelle-db-1
        run: docker logs micelle-db-1
      - name: Get logs for micelle-app-1
        run: docker logs micelle-app-1
      - name: Wait for server to start

        run: sleep 100
      - name: Check running containers
        run: docker ps

      - name: Install dependencies
        run: npm ci
        working-directory: src

      - name: Build application
        run: npm run build
        working-directory: src
   
      - name: Start server
        run: npm start &
        working-directory: src

      - name: Check server status
        run: curl -I http://localhost || exit 1
        working-directory: src

      - name: Cypress run
        run: |
          cd src
          echo "Now in $(pwd), running Cypress..."
          npx cypress run --record --parallel

        # Uses the official Cypress GitHub action https://github.com/cypress-io/github-action
        # uses: cypress-io/github-action@v6
        # with:
          # Starts web server for E2E tests - replace with your own server invocation
          # https://docs.cypress.io/guides/continuous-integration/introduction#Boot-your-server
          # start: npm start
          # wait-on: 'http://localhost' # Waits for above
          # Records to Cypress Cloud
          # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
          # record: true
          # parallel: true # Runs test in parallel using settings above
        env:
          # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
          # in GitHub repo → Settings → Secrets → Actions
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
