name: Lighthouse Tests
on:
  workflow_dispatch:

jobs:
  lighthouse-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for .env and .env.example in src
        run: |
          echo "Listing files in micelle/micelle/src:"
          ls -la micelle/micelle/src/.env || echo ".env not found"
          ls -la micelle/micelle/src/.env.example || echo ".env.example not found"

      - name: Build and start Docker containers
        run: docker compose -f docker-compose.test.yml up -d --build

      - name: Fix storage permissions
        run: |
          docker exec micelle-app-1 chown -R www-data:www-data /var/www/html/storage
          docker exec micelle-app-1 chmod -R 775 /var/www/html/storage
          docker exec micelle-app-1 chmod -R 777 /var/www/html/bootstrap/cache

      - name: Check APP_KEY in .env file
        run: docker exec micelle-app-1 grep APP_KEY /var/www/html/.env

      - name: Install Composer dependencies
        run: docker exec micelle-app-1 composer install -vvv --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Get logs for micelle-app-1
        run: docker logs micelle-app-1

      - name: Wait for server to start
        run: sleep 100

      - name: Check running containers
        run: docker ps

      - name: Test container connectivity with ping
        run: docker exec micelle-web-1 ping -c 4 micelle-app-1

      - name: Install npm dependencies
        run: npm ci
        working-directory: src

      - name: Build application
        run: npm run build
        working-directory: src

      - name: Start server
        run: npm start &
        working-directory: src

      - name: Wait for server to start
        run: sleep 300

      - name: Check server status
        id: check_server
        run: |
          echo "Checking server status..."
          curl -I -f http://localhost:8080 || exit 1
        working-directory: src

      - name: Dump additional error logs on failure
        if: always() && steps.check_server.outcome == 'failure'
        run: |
          echo "=== Docker logs for micelle-app-1 (Application) ==="
          docker logs micelle-app-1

      - name: Run Lighthouse CI
        run: npx lhci autorun --chrome-flags="--headless=false"
        working-directory: src
