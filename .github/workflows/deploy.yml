name: CI/CD Pipeline

# ──────────────────────────────────────────────
# 権限
# ──────────────────────────────────────────────
permissions:
  contents: read
  packages: write     
  id-token: write

# ──────────────────────────────────────────────
# トリガ
# ──────────────────────────────────────────────
on:
  push:
    branches: [main]

# ──────────────────────────────────────────────
# Job ①: Build & Push イメージ
# ──────────────────────────────────────────────
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.FOR_GHCR }}  

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: infra/php/Dockerfile.prod
          push: true
          tags: ghcr.io/141takahiro/micelle-app:latest

# ──────────────────────────────────────────────
# Job ②: Deploy to EC2
# ──────────────────────────────────────────────
deploy-to-ec2:
  needs: build-and-push-image
  runs-on: ubuntu-latest
  steps:
    - name: Deploy to EC2 (Debug Mode)
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        script: |
          echo "==== DEBUG: システム情報 ===="
          echo "実行ユーザー: $(whoami)"
          echo "TTY情報: $(tty)"
          echo "==== DEBUG: 終了 ===="

          echo "${{ secrets.FOR_GHCR }}" | docker login ghcr.io -u 141Takahiro --password-stdin

          cd ~/micelle
          git fetch origin main
          git reset --hard origin/main
          git clean -fd
          
          docker-compose -f docker-compose.prod.yml pull
          docker-compose -f docker-compose.prod.yml up -d --remove-orphans